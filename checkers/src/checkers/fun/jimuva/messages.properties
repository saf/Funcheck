accessing.foreign.rep=Cannot access the @Rep field "%s" of a foreign object.
anonymous.assigns.this.to.array.field=Cannot assign a reference to this to the array field "%s" in an @Anonymous method.
anonymous.assigns.this.to.field=Cannot assign a reference to this to the field "%s" in an @Anonymous method.
anonymous.calls.non.anonymous=Cannot call non-@Anonymous method %s() inside the @Anonymous method %s().
anonymous.calls.non.anonymous.on.alias=Cannot call non-@Anonymous method %s() on possible alias of this inside the @Anonymous method %s().
anonymous.implicit=The @Anonymous annotation is implicit on %s() due to the class "%s" being an @ImmutableClass.
anonymous.returns.this=Cannot return a reference to this from an @Anonymous method.
argument.may.be.this=Cannot pass "%s" as a method argument inside an @Anonymous method.
assign.readonly.receiver.field=Cannot assign field "%s" in @ReadOnly method %s().
assign.immutable.field=Cannot assign field "%s" of the @Immutable object "%s".
assignment.to.field.of.immutable.array=Cannot assign to the field "%s" of the @Immutable array "%s".
assignment.to.field.of.rep=Cannot assign to the field "%s" of the @Rep object "%s" here.
assignment.to.rep.array.of.immutable=Cannot assign to the field "%s" of a @Rep array "%s" of an immutable object. The array is part of an immutable object and cannot be modified.
assignment.to.rep.array.of.receiver=Cannot assign to the field "%s" of a @Rep array "%s". The array is part of the inner state of 'this' and may not be modified here.
assignment.to.rep.array.of.rep.array.receiver=Cannot assign to the field "%s" of the @Rep array "%s". The array is part of the inner state of 'this' and may not be modified here.
constructor.myaccess.parameter=The constructor "%s" cannot have a @Myaccess parameter.
immutable.calls.nonreadonly=Cannot invoke the non-@Readonly method %s on the @Immutable object.
immutable.implicit.on.encap.in.readonly=@Peer and @OwnedBy values are implicitly immutable inside read-only methods.
immutable.untrusted.constructor=Creating an @Immutable object using a non-@Anonymous constructor. The constructor may leak references to this and let other objects observe the object's state while it is not fully constructed.
modifying.myaccess.in.readonly=Cannot modify the @Myaccess value "%s" inside the @ReadOnly method "%s()" because the access rights variable may be instantiated to @Immutable. 
mutable.reference.to.immutable.class=Cannot create a @Mutable reference to an object of a class marked with @ImmutableClass.
mutable.rep.field=The @Rep field "%s" cannot be mutable. @Rep fields must be @Myaccess or @Immutable to protect the object internal state.
myaccess.variable.in.static.method=The variable "%s" cannot be @Myaccess inside static method "%s()".
nonreadonly.call.on.rep=Cannot call non-@ReadOnly method %s() on @Rep object "%s".
nonreadonly.call.on.myaccess.in.readonly=Cannot call the non-@ReadOnly method "%s()" on the @Myaccess object "%s". The access rights variable @Myaccess might be instantiated to @Immutable.
owner.class.cannot.own=A class cannot be the owner of an object.
owner.class.does.not.exist=The requested class %s does not exist.
owner.invalid.identifier=%s is not a valid class/member identifier.
owner.nonpublic.member=The member %s must be public.
owner.nonstatic.member=The member %s must be static.
owner.no.such.field=The member %s does not exist in the scope of element %s.
owner.peeking.unsupported=Ownership by members of wildcard or variable types is not supported.
owner.simple.type=Cannot access fields of array or primitive type in ownership specifications.
passing.peer.to.foreign.method=Cannot pass a read-write reference to the @Peer object "%s" to a foreign method.
passing.rep.to.foreign.method=Cannot pass a read-write reference to the @Rep object "%s" to a foreign method.
public.field.of.immutable.class=The field "%s" cannot be public in the @ImmutableClass "%s".
public.rep.field=The @Rep field "%s" cannot be public.
readonly.implicit=The @ReadOnly annotation is implicit on %s() due to the enclosing class %s being an @ImmutableClass.
returning.rep=Cannot return the @Rep object "%s".
static.alias.to.safe=Prohibited creation of a static alias %s to the @Safe value %s.
static.method.myaccess.parameter=The static method "%s" cannot have a @Myaccess parameter.
static.method.returns.myaccess=The static method "%s" cannot return a @Myaccess value.
static.myaccess.field=The static field "%s" cannot have @Myaccess access rights. 
this.ref.alias="%s" may be an alias to this assigned here:
this.ref.nonanonymous.on.alias=A reference to this may be returned by the call to the non-@Anonymous method %s() of a possible alias "%s" of this, assigned here:
this.ref.nonanonymous.on.this=A reference to this may be returned by the call to the non-@Anonymous method %s().